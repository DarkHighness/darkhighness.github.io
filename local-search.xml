<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Higher Kind Type</title>
    <link href="/2023/01/25/higher-kind-type/"/>
    <url>/2023/01/25/higher-kind-type/</url>
    
    <content type="html"><![CDATA[<p>随手写着玩的 HKT</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">pub</span> <span class="hljs-keyword">trait</span> <span class="hljs-title class_">HKT</span> &#123;  <br>    <span class="hljs-keyword">type</span> <span class="hljs-title class_">Inner</span>;  <br>    <span class="hljs-keyword">type</span> <span class="hljs-title class_">With</span>&lt;T&gt;: HKT&lt;Inner = T&gt;;  <br>&#125;  <br>  <br><span class="hljs-keyword">pub</span> <span class="hljs-keyword">trait</span> <span class="hljs-title class_">Functor</span>: HKT &#123;  <br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">fmap</span>&lt;T, F&gt;(&amp;<span class="hljs-keyword">self</span>, f: F) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span>::With&lt;T&gt;  <br>    <span class="hljs-keyword">where</span>  <br>        F: <span class="hljs-title function_ invoke__">Fn</span>(&amp;<span class="hljs-keyword">Self</span>::Inner) <span class="hljs-punctuation">-&gt;</span> T;  <br>&#125;  <br>  <br><span class="hljs-keyword">pub</span> <span class="hljs-keyword">trait</span> <span class="hljs-title class_">Applicative</span> : Functor &#123;  <br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">pure</span>(a: <span class="hljs-keyword">Self</span>::Inner) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span>;  <br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">ap</span>&lt;I, O&gt;(&amp;<span class="hljs-keyword">self</span>, i: <span class="hljs-keyword">Self</span>::With&lt;I&gt;) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span>::With&lt;O&gt;  <br>        <span class="hljs-keyword">where</span>  <br>            <span class="hljs-keyword">Self</span>::Inner: <span class="hljs-title function_ invoke__">Fn</span>(&amp;I) <span class="hljs-punctuation">-&gt;</span> O;  <br>&#125;  <br>  <br><span class="hljs-keyword">pub</span> <span class="hljs-keyword">trait</span> <span class="hljs-title class_">Monad</span>: Applicative &#123;  <br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">bind</span>&lt;O, F&gt;(&amp;<span class="hljs-keyword">self</span>, f: F) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span>::With&lt;O&gt;  <br>    <span class="hljs-keyword">where</span>  <br>        F: <span class="hljs-title function_ invoke__">Fn</span>(&amp;<span class="hljs-keyword">Self</span>::Inner) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span>::With&lt;O&gt;;  <br>&#125;  <br>  <br><span class="hljs-keyword">impl</span>&lt;T&gt; HKT <span class="hljs-keyword">for</span> <span class="hljs-title class_">Option</span>&lt;T&gt; &#123;  <br>    <span class="hljs-keyword">type</span> <span class="hljs-title class_">Inner</span> = T;  <br>    <span class="hljs-keyword">type</span> <span class="hljs-title class_">With</span>&lt;U&gt; = <span class="hljs-type">Option</span>&lt;U&gt;;  <br>&#125;  <br>  <br><span class="hljs-keyword">impl</span>&lt;T&gt; Functor <span class="hljs-keyword">for</span> <span class="hljs-title class_">Option</span>&lt;T&gt; &#123;  <br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">fmap</span>&lt;U, F&gt;(&amp;<span class="hljs-keyword">self</span>, f: F) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span>::With&lt;U&gt;  <br>    <span class="hljs-keyword">where</span>  <br>        F: <span class="hljs-title function_ invoke__">Fn</span>(&amp;<span class="hljs-keyword">Self</span>::Inner) <span class="hljs-punctuation">-&gt;</span> U,  <br>    &#123;  <br>        <span class="hljs-keyword">match</span> <span class="hljs-keyword">self</span> &#123;  <br>            <span class="hljs-title function_ invoke__">Some</span>(x) =&gt; <span class="hljs-title function_ invoke__">Some</span>(<span class="hljs-title function_ invoke__">f</span>(x)),  <br>            <span class="hljs-literal">None</span> =&gt; <span class="hljs-literal">None</span>,  <br>        &#125;  <br>    &#125;  <br>&#125;  <br>  <br><span class="hljs-keyword">impl</span>&lt;T&gt; Applicative <span class="hljs-keyword">for</span> <span class="hljs-title class_">Option</span>&lt;T&gt; &#123;  <br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">pure</span>(a: <span class="hljs-keyword">Self</span>::Inner) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span> &#123;  <br>        <span class="hljs-title function_ invoke__">Some</span>(a)  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">ap</span>&lt;I, O&gt;(&amp;<span class="hljs-keyword">self</span>, i: <span class="hljs-keyword">Self</span>::With&lt;I&gt;) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span>::With&lt;O&gt;  <br>    <span class="hljs-keyword">where</span>  <br>        <span class="hljs-keyword">Self</span>::Inner: <span class="hljs-title function_ invoke__">Fn</span>(&amp;I) <span class="hljs-punctuation">-&gt;</span> O,  <br>    &#123;  <br>        <span class="hljs-keyword">match</span> <span class="hljs-keyword">self</span> &#123;  <br>            <span class="hljs-title function_ invoke__">Some</span>(f) =&gt; <span class="hljs-keyword">match</span> i &#123;  <br>                <span class="hljs-title function_ invoke__">Some</span>(x) =&gt; <span class="hljs-title function_ invoke__">Some</span>(<span class="hljs-title function_ invoke__">f</span>(&amp;x)),  <br>                <span class="hljs-literal">None</span> =&gt; <span class="hljs-literal">None</span>,  <br>            &#125;  <br>            <span class="hljs-literal">None</span> =&gt; <span class="hljs-literal">None</span>,  <br>        &#125;  <br>    &#125;  <br>&#125;  <br>  <br><span class="hljs-keyword">impl</span>&lt;T&gt; Monad <span class="hljs-keyword">for</span> <span class="hljs-title class_">Option</span>&lt;T&gt; &#123;  <br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">bind</span>&lt;U, F&gt;(&amp;<span class="hljs-keyword">self</span>, f: F) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span>::With&lt;U&gt;  <br>    <span class="hljs-keyword">where</span>  <br>        F: <span class="hljs-title function_ invoke__">Fn</span>(&amp;<span class="hljs-keyword">Self</span>::Inner) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span>::With&lt;U&gt;,  <br>    &#123;  <br>        <span class="hljs-keyword">match</span> <span class="hljs-keyword">self</span> &#123;  <br>            <span class="hljs-title function_ invoke__">Some</span>(x) =&gt; <span class="hljs-title function_ invoke__">f</span>(&amp;x),  <br>            <span class="hljs-literal">None</span> =&gt; <span class="hljs-literal">None</span>,  <br>        &#125;  <br>    &#125;  <br>&#125;  <br>  <br><span class="hljs-keyword">impl</span>&lt;T&gt; HKT <span class="hljs-keyword">for</span> <span class="hljs-title class_">Vec</span>&lt;T&gt; &#123;  <br>    <span class="hljs-keyword">type</span> <span class="hljs-title class_">Inner</span> = T;  <br>    <span class="hljs-keyword">type</span> <span class="hljs-title class_">With</span>&lt;U&gt; = <span class="hljs-type">Vec</span>&lt;U&gt;;  <br>&#125;  <br>  <br><span class="hljs-keyword">impl</span>&lt;T&gt; Functor <span class="hljs-keyword">for</span> <span class="hljs-title class_">Vec</span>&lt;T&gt; &#123;  <br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">fmap</span>&lt;U, F&gt;(&amp;<span class="hljs-keyword">self</span>, f: F) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span>::With&lt;U&gt;  <br>    <span class="hljs-keyword">where</span>  <br>        F: <span class="hljs-title function_ invoke__">Fn</span>(&amp;<span class="hljs-keyword">Self</span>::Inner) <span class="hljs-punctuation">-&gt;</span> U,  <br>    &#123;  <br>        <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">v</span> = <span class="hljs-type">Vec</span>::<span class="hljs-title function_ invoke__">new</span>();  <br>  <br>        <span class="hljs-keyword">for</span> <span class="hljs-variable">x</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">self</span> &#123;  <br>            v.<span class="hljs-title function_ invoke__">push</span>(<span class="hljs-title function_ invoke__">f</span>(x));  <br>        &#125;  <br>  <br>        v  <br>    &#125;  <br>&#125;  <br>  <br><span class="hljs-keyword">impl</span>&lt;T&gt; Applicative <span class="hljs-keyword">for</span> <span class="hljs-title class_">Vec</span>&lt;T&gt; &#123;  <br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">pure</span>(a: <span class="hljs-keyword">Self</span>::Inner) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span> &#123;  <br>        <span class="hljs-built_in">vec!</span>[a]  <br>    &#125;  <br>  <br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">ap</span>&lt;I, O&gt;(&amp;<span class="hljs-keyword">self</span>, i: <span class="hljs-keyword">Self</span>::With&lt;I&gt;) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span>::With&lt;O&gt;  <br>    <span class="hljs-keyword">where</span>  <br>        <span class="hljs-keyword">Self</span>::Inner: <span class="hljs-title function_ invoke__">Fn</span>(&amp;I) <span class="hljs-punctuation">-&gt;</span> O,  <br>    &#123;  <br>        <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">v</span> = <span class="hljs-type">Vec</span>::<span class="hljs-title function_ invoke__">new</span>();  <br>  <br>        <span class="hljs-keyword">for</span> <span class="hljs-variable">f</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">self</span> &#123;  <br>            <span class="hljs-keyword">for</span> <span class="hljs-variable">x</span> <span class="hljs-keyword">in</span> &amp;i &#123;  <br>                v.<span class="hljs-title function_ invoke__">push</span>(<span class="hljs-title function_ invoke__">f</span>(x));  <br>            &#125;  <br>        &#125;  <br>  <br>        v  <br>    &#125;  <br>&#125;  <br>  <br><span class="hljs-keyword">impl</span>&lt;T&gt; Monad <span class="hljs-keyword">for</span> <span class="hljs-title class_">Vec</span>&lt;T&gt; &#123;  <br>    <span class="hljs-keyword">fn</span> <span class="hljs-title function_">bind</span>&lt;U, F&gt;(&amp;<span class="hljs-keyword">self</span>, f: F) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span>::With&lt;U&gt;  <br>    <span class="hljs-keyword">where</span>  <br>        F: <span class="hljs-title function_ invoke__">Fn</span>(&amp;<span class="hljs-keyword">Self</span>::Inner) <span class="hljs-punctuation">-&gt;</span> <span class="hljs-keyword">Self</span>::With&lt;U&gt;,  <br>    &#123;  <br>        <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">v</span> = <span class="hljs-type">Vec</span>::<span class="hljs-title function_ invoke__">new</span>();  <br>  <br>        <span class="hljs-keyword">for</span> <span class="hljs-variable">x</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">self</span> &#123;  <br>            v.<span class="hljs-title function_ invoke__">extend</span>(<span class="hljs-title function_ invoke__">f</span>(x));  <br>        &#125;  <br>  <br>        v  <br>    &#125;  <br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>一些有趣的句子</title>
    <link href="/2023/01/24/interesting-sentences/"/>
    <url>/2023/01/24/interesting-sentences/</url>
    
    <content type="html"><![CDATA[<blockquote><p>We say that a language is compiled if the translator analyzes it thoroughly (rather than effecting some “mechanical” transformation), and if the intermediate program does not bear a strong resemblance to the source. These two characteristics—thorough analysis and nontrivial transformation—are the hallmarks of compilation.  </p><p>如果翻译器对程序进行了彻底的分析而非某种机械的变换，而且生成的中间程序与源程序之间已经没有很强的相似性，我们就认为这个语言是编译的。彻底的分析和非平凡的变换，是编译方式的标志性特征.  </p><p>We say that a knowledge point is comprehended if you analyze it thoroughly (rather than echoing what the books say), and if the concept generated in your brain does not bear a strong resemblance to the text. These two characteristics—thorough analysis and nontrivial transformation—are the hallmarks of comprehension.</p><p>如果你对知识进行了彻底的分析而非某种机械的套弄，在你脑中生成的概念与生硬的文字之间已经没有很强的相似性，我们就认为这个概念是被理解的。彻底的分析和非凡的变换，是获得真知的标志性特征.</p><p>来自: <a href="https://ice1000.org/#:~:text=We%20say%20that,hallmarks%20of%20comprehension.">Ice1000’s blog</a></p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2023 新春快乐</title>
    <link href="/2023/01/21/happy-new-year-2023/"/>
    <url>/2023/01/21/happy-new-year-2023/</url>
    
    <content type="html"><![CDATA[<p>2023 新春快乐，愿兔年万事顺遂。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
